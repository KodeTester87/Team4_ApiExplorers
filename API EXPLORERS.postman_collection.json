{
	"info": {
		"_postman_id": "fc914616-a775-49f2-8100-aa80f2fc2cec",
		"name": "API EXPLORERS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37298258",
		"_collection_link": "https://cloudy-comet-810968.postman.co/workspace/cad9783e-2acc-45e2-8f7f-398e58ca5cd8/collection/37298258-fc914616-a775-49f2-8100-aa80f2fc2cec?action=share&source=collection_link&creator=37298258"
	},
	"item": [
		{
			"name": "Token Generation",
			"item": [
				{
					"name": "Admin Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json(); ",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    res = JSON.parse(responseBody)",
									"value = res.token",
									"console.log(value)",
									"pm.collectionVariables.set(\"Admintoken\", value);",
									"      ",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });",
									"    res = JSON.parse(responseBody)",
									"value = res.token",
									"console.log(value)",
									"pm.collectionVariables.set(\"Admintoken\", value);",
									"",
									"pm.test(\"validate the schema using AJV\" ,()=>",
									"{ pm.response.to.have.jsonSchema(Schema); ",
									"});",
									"",
									"    ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"    pm.test(\"message: \"+jsonData.message,()=>{",
									"    console.log(\"Message is: \",jsonData.message);",
									"});}",
									"pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"    pm.test(\"message: \"+jsonData.message,()=>{",
									"    console.log(\"Message is: \",jsonData.message);",
									"",
									"});}",
									"pm.execution.setNextRequest(\"logout\");",
									"}else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"    pm.test(\"message: \"+jsonData.message,()=>{",
									"    console.log(\"Message is: \",jsonData.message);",
									"});}",
									"pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"    pm.test(\"error: \"+jsonData.error,()=>{",
									"    console.log(\"Error is: \",jsonData.error);",
									"    ",
									"});}",
									"pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									" });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"password\": \"March@2025\",\n\"userLoginEmailId\": \"sdetorganizer@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/login",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Program",
			"item": [
				{
					"name": "Create Program",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"programDescription\": \"Strin\",\n\"programName\": \"Strin\",\n\"programStatus\": \"Active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lms-hackthon-feb25-803334c87fbe.herokuapp.com/lms/saveprogram",
							"protocol": "https",
							"host": [
								"lms-hackthon-feb25-803334c87fbe",
								"herokuapp",
								"com"
							],
							"path": [
								"lms",
								"saveprogram"
							]
						}
					},
					"response": []
				},
				{
					"name": "all programs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lms-hackthon-feb25-803334c87fbe.herokuapp.com/lms/allPrograms",
							"protocol": "https",
							"host": [
								"lms-hackthon-feb25-803334c87fbe",
								"herokuapp",
								"com"
							],
							"path": [
								"lms",
								"allPrograms"
							]
						}
					},
					"response": []
				},
				{
					"name": "all programs with user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/allProgramsWithUsers",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"allProgramsWithUsers"
							]
						}
					},
					"response": []
				},
				{
					"name": "program by programid",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/programs/16910",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"programs",
								"16910"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Batch",
			"item": [
				{
					"name": "New Request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"batchDescription\":\n\"string\",\n\"batchName\": \"string\",\n\"batchNoOfClasses\": 1,\n\"batchStatus\": \"Active\",\n\"programId\": 16910\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/batches",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"batches"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Class",
			"item": [
				{
					"name": "Create Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"  pm.test(\"Validate schema\", () => {",
									"            pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"batchId\": 9468,\n\"classNo\": 1,\n\"classDate\": \"2025-03-19T19:04:41.220Z\",\n\"classTopic\": \"Aerospace\",\n\"classStatus\": \"Active\",\n\"classStaffId\": \"U25\",\n\"classDescription\": \"Aero\",\n\"classComments\": \"null\",\n\"classNotes\": \"aerooor\",\n\"classRecordingPath\": \"null\",\n\"classScheduledDates\": [\"2025-03-19T19:04:41.220Z\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/CreateClassSchedule",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"CreateClassSchedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all classes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"     ",
									"var schema ={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};",
									"pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"   // Compile the schema",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/allClasses",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"allClasses"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by studentid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"  var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"csId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"batchId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classNo\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classDate\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classTopic\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classStaffId\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classDescription\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classComments\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classNotes\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classRecordingPath\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"csId\",",
									"    \"batchId\",",
									"    \"classNo\",",
									"    \"classDate\",",
									"    \"classTopic\",",
									"    \"classStaffId\",",
									"    \"classDescription\",",
									"    \"classComments\",",
									"    \"classNotes\",",
									"    \"classRecordingPath\"",
									"  ]",
									"  };",
									"  pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/upcomingClasses/97",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"upcomingClasses",
								"97"
							]
						}
					},
					"response": []
				},
				{
					"name": "classRecordingByBatchid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"classRecordingPath\",",
									"        \"csId\"",
									"      ]",
									"    }",
									"  ]",
									"};",
									"   pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/batchRecordings/8444",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"batchRecordings",
								"8444"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes with class topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"}; pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"   ",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classes/super keywords",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classes",
								"super keywords"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by batchid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classesbyBatch/8444",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classesbyBatch",
								"8444"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by staffid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classesByStaff/U02",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classesByStaff",
								"U02"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classrecordings",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classrecordings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Recordings by class id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"csId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classRecordingPath\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"csId\",",
									"    \"classRecordingPath\"",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classRecordings/51",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classRecordings",
								"51"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Class Negative testcases",
			"item": [
				{
					"name": "Create Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"  pm.test(\"Validate schema\", () => {",
									"            pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"batchId\": 9468,\n\"classNo\": 1,\n\"classDate\": \"2025-03-19T19:04:41.220Z\",\n\"classTopic\": \"Aerospace\",\n\"classStatus\": \"Active\",\n\"classStaffId\": \"U25\",\n\"classDescription\": \"Aero\",\n\"classComments\": \"null\",\n\"classNotes\": \"aerooor\",\n\"classRecordingPath\": \"null\",\n\"classScheduledDates\": [\"2025-03-19T19:04:41.220Z\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/CreateClassSchedule",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"CreateClassSchedule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all classes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"     ",
									"var schema ={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};",
									"pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"   // Compile the schema",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/allClasses",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"allClasses"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by studentid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"  var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"csId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"batchId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classNo\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classDate\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classTopic\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classStaffId\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classDescription\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classComments\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classNotes\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"classRecordingPath\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"csId\",",
									"    \"batchId\",",
									"    \"classNo\",",
									"    \"classDate\",",
									"    \"classTopic\",",
									"    \"classStaffId\",",
									"    \"classDescription\",",
									"    \"classComments\",",
									"    \"classNotes\",",
									"    \"classRecordingPath\"",
									"  ]",
									"  };",
									"  pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/upcomingClasses/97",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"upcomingClasses",
								"97"
							]
						}
					},
					"response": []
				},
				{
					"name": "classRecordingByBatchid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"classRecordingPath\",",
									"        \"csId\"",
									"      ]",
									"    }",
									"  ]",
									"};",
									"   pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/batchRecordings/8444",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"batchRecordings",
								"8444"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes with class topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"}; pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"   ",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classes/super keywords",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classes",
								"super keywords"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by batchid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classesbyBatch/8444",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classesbyBatch",
								"8444"
							]
						}
					},
					"response": []
				},
				{
					"name": "classes by staffid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"null\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"batchId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classNo\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classTopic\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStatus\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classStaffId\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classDescription\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classComments\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classNotes\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"batchName\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"classScheduledDates\": {",
									"          \"type\": \"array\",",
									"          \"items\": [",
									"            {",
									"              \"type\": \"string\"",
									"            },",
									"            {",
									"              \"type\": \"string\"",
									"            }",
									"          ]",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"batchId\",",
									"        \"classNo\",",
									"        \"classDate\",",
									"        \"classTopic\",",
									"        \"classStatus\",",
									"        \"classStaffId\",",
									"        \"classDescription\",",
									"        \"classComments\",",
									"        \"classNotes\",",
									"        \"classRecordingPath\",",
									"        \"batchName\",",
									"        \"classScheduledDates\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classesByStaff/U02",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classesByStaff",
								"U02"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Recordings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"array\",",
									"  \"items\": [",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"null\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    },",
									"    {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"csId\": {",
									"          \"type\": \"integer\"",
									"        },",
									"        \"classRecordingPath\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"csId\",",
									"        \"classRecordingPath\"",
									"      ]",
									"    }",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classrecordings",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classrecordings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Recordings by class id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify the expected status code is 200\", function () { ",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"   // Compile the schema",
									"   var schema={",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"csId\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"classRecordingPath\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"csId\",",
									"    \"classRecordingPath\"",
									"  ]",
									"};pm.test('schema is valid', function(){",
									"   pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"  ",
									"",
									"",
									"}else if (pm.response.code === 201) {",
									"    pm.test(\"Verify the expected status code is 201\", function () {",
									"        pm.response.to.have.status(201);",
									"    });  ",
									"} else if (pm.response.code === 401) {",
									"    pm.test(\"Validate status code 401\", function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Validate status code 400\", function () {",
									"        pm.response.to.have.status(400);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else if (pm.response.code === 404) {",
									"    pm.test(\"Validate Status code is 404\", function () {",
									"        pm.response.to.have.status(404);",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"message: \"+jsonData.message,()=>{",
									"            console.log(\"Message is: \",jsonData.message);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"} else {",
									"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([500,501, 503]); ",
									"    });",
									"    if(jsonData!=null){",
									"        pm.test(\"error: \"+jsonData.error,()=>{",
									"            console.log(\"Error is: \",jsonData.error);",
									"        });",
									"    }",
									"    pm.execution.setNextRequest(\"logout\");",
									"}",
									"",
									"//Validate the header is present or not",
									"pm.test(\"Content-Type header is present\",() =>{",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"//Validate the header value",
									"pm.test(\"Content-Type header value is application/json\",()=>{",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
									"});",
									"",
									"pm.test(\"Response time is less than 1000 ms\",()=>{",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/classRecordings/51",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"classRecordings",
								"51"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Module",
			"item": []
		},
		{
			"name": "Delete",
			"item": []
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Admintoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/logoutlms",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"logoutlms"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Verify the expected status code is 200\", function () { ",
							"        pm.response.to.have.status(200);",
							"    });",
							"    ",
							"   // Compile the schema",
							"  ",
							"",
							"",
							"}",
							"//Validate the header is present or not",
							"pm.test(\"Content-Type header is present\",() =>{",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"//Validate the header value",
							"pm.test(\"Content-Type header value is application/json\",()=>{",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"Response time is less than 1000 ms\",()=>{",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Admintoken",
			"value": ""
		},
		{
			"key": "BaseUrl",
			"value": "",
			"type": "string"
		}
	]
}