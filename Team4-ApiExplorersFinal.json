[
   {
      "requests": [
         {
            "name": "Login",
            "data": [
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "loginsss",
                  "authType": "No Auth",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
               {
                  "method":"POST",
                  "contentType":"application/xml",                  
                    "user_password": "March@2025",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 415,
                  "statusText": "Unsupported Media Type"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "test",
                  "user_LoginEmail": "",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "test",
                  "user_LoginEmail": "abc",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "1234",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "test",
                  "user_LoginEmail": "@@@##",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "",
                  "user_LoginEmail": "",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "###%%",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "1234",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
               {
                  "method":"GET",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "abcd123@",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "user_password": "March@2025",
                  "user_LoginEmail": "sdetorganizer@gmail.com",
                  "Endpoint": "login",
                  "authType": "No Auth",
                  "statusCode": 200,
                  "statusText": "OK"
               }
            ]
         },
         {
            "name": "Logout",
            "data": [
               {
                  "method":"GET",
                  "Endpoint": "logoutlms",
                  "authType": "No Auth",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
               {
                  "method":"GET",
                  "Endpoint": "logoutlms",
                  "authType": "Invalid Bearer token",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
               {
                  "method":"POST",
                  "Endpoint": "logoutlms",
                  "authType": "Bearer Token",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               },
               {
                  "method":"GET",
                  "Endpoint": "logout123",
                  "authType": "Bearer Token",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
               {
                  "method":"GET",
                  "Endpoint": "logoutlms",
                  "authType": "Bearer Token",
                  "statusCode": 200,
                  "statusText": "OK"
               }
            ]
         },
         {
            "name": "Add New Program with Mandatory fields",
            "data": [
            
               {
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programStatus": "Active",
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 201,
                  "statusText": "Created"
               }
            ]
         },
         {
            "name": "Add New Program with all fields",
            "data": [
               
               {
                  "scenario": "Add new program with existing program name",
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programDescription": "program with All fields",
                  "programName": "PostmanApiExplorer",
                  "programStatus": "Active",
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "scenario": "Add new program with empty programStatus",
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programDescription": "program with All fields",
                  "programName": "PostmanApiExplorer",
                  "programStatus": null,
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "scenario": "Add new program with empty invalid programName",
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programDescription": "program with All fields",
                  "programName": "Sdger4356",
                  "programStatus": "Active",
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "scenario": "Add new program with empty invalid programStatus",
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programDescription": "program with All fields",
                  "programName": "PostmanApiExplorer",
                  "programStatus": "Act4653",
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 400,
                  "statusText": "Bad Request"
               },
               {
                  "Scenario":"Add New Program with all fields",
                  "method":"POST",
                  "contentType":"application/json",                  
                  "programDescription": "program with All fields",
                  "programName": "PostmanApiExplorerXyz",
                  "programStatus": "Active",
                  "authType": "Bearer Token",
                  "Endpoint": "saveprogram",
                  "statusCode": 201,
                  "statusText": "Created"
               }

            ]
         },
         {
          "name": "get all programs",
          "data": [
             {
                "method":"GET",
                "authType": "No Auth",
                "Endpoint": "allPrograms",
                "statusCode": 401,
                "statusText": "Unauthorized"
            },
             {
                "method":"GET",
                "authType": "Invalid Bearer token",
                "Endpoint": "allPrograms",
                "statusCode": 401,
                "statusText": "Unauthorized"
             },
             {
                "method":"POST",
                "authType": "Bearer Token",
                "Endpoint": "allPrograms",
                "statusCode": 405,
                "statusText": "Method Not Allowed"
             },
             {
                "method":"GET",
                "authType": "Bearer Token",
                "Endpoint": "allProg",
                "statusCode": 404,
                "statusText": "Not Found"
             },
             {
                "method":"GET",
                "authType": "Bearer Token",
                "Endpoint": "allPrograms",
                "statusCode": 200,
                "statusText": "OK"
             }
          ]
       },
       {
        "name": "GET All Programs with Users",
        "data": [
           {
              "method":"GET",
              "authType": "No Auth",
              "Endpoint": "allProgramsWithUsers",
              "statusCode": 401,
              "statusText": "Unauthorized"
          },
           {
              "method":"GET",
              "authType": "Invalid Bearer token",
              "Endpoint": "allProgramsWithUsers",
              "statusCode": 401,
              "statusText": "Unauthorized"
           },
           {
              "method":"POST",
              "authType": "Bearer Token",
              "Endpoint": "allProgramsWithUsers",
              "statusCode": 405,
              "statusText": "Method Not Allowed"
           },
           {
              "method":"GET",
              "authType": "Bearer Token",
              "Endpoint": "allPrograWit",
              "statusCode": 404,
              "statusText": "Not Found"
           },
           {
              "method":"GET",
              "authType": "Bearer Token",
              "Endpoint": "allProgramsWithUsers",
              "statusCode": 200,
              "statusText": "OK"
           }
        ]
     },
     {
        "name": "GET Program by ProgramId",
        "data": [
           {
              "method":"GET",
              "authType": "No Auth",
              "Endpoint": "programs/{{programId1}}",
              "statusCode": 401,
              "statusText": "Unauthorized"
          },
           {
              "method":"GET",
              "authType": "Invalid Bearer token",
              "Endpoint": "programs/{{programId1}}",
              "statusCode": 401,
              "statusText": "Unauthorized"
           },
           {
              "method":"POST",
              "authType": "Bearer Token",
              "Endpoint": "programs/{{programId1}}",
              "statusCode": 405,
              "statusText": "Method Not Allowed"
           },
           {
              "method":"GET",
              "authType": "Bearer Token",
              "Endpoint": "programs/{{invalidProgramId}}",
              "statusCode": 404,
              "statusText": "Not Found"
           },
           {
              "method":"GET",
              "authType": "Bearer Token",
              "Endpoint": "programs/{{programId1}}",
              "statusCode": 200,
              "statusText": "OK"
           }
        ]
     },
     {
      "name": "Update program with programId",
      "data": [
        {
          "scenario": "update program without authorization",
          "authType": "No Auth",
          "method": "PUT",
          "endpoint": "putprogram/{{programId1}}",
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "statusCode": 401,
          "statusText": "Unauthorized"
        },
        {
          "scenario": "update program with inactive program",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "putprogram/{{programId1}}",
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "programId": 16343,
          "programName": "SalesForceDevelopment",
          "statusCode": 200,
          "statusText": "OK"
        },
        {
          "scenario": "update program with invalid programId ",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "putprogram/:programId",
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "programId": "23gfd",
          "statusCode":404,
          "statusText": "Not Found"
        },
        {
          "scenario": "Update program with programId with no programId",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "putprogram/",
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "statusCode": 404,
          "statusText": "Not Found"
        },
        {
          "scenario": "update program with programId with authorization",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "putprogram/{{programId1}}",
          "programDescription": "program with All fields",
          "programName": "SalesForceDeveloping",
          "programStatus": "Active",
          "statusCode": 200,
          "statusText": "Ok"
        }
      ]
    },
    {
      "name": "Update program with programName",
      "data": [
        {
          "scenario": "update program without authorization",
          "authType": "No Auth",
          "method": "PUT",
          "endpoint": "program/{{programName2}}",
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "statusCode": 401,
          "statusText": "Unauthorized"
        },
        {
          "scenario": "update program with invalid programName ",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "program/:programName",
          "programDescription": "program with All fields",
          "programName": "Sdfe3245",
          "programStatus": "Active",
          "statusCode":404,
          "statusText": "Not Found"
        },
        {
          "scenario": "Update program with empty programName",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "program/:programName",
          "programName": null,
          "programDescription": "program with All fields",
          "programStatus": "Active",
          "statusCode": 404,
          "statusText": "Not Found"
        },
        {
         "scenario": "Update program with empty programStatus",
         "authType": "Bearer Token",
         "method": "PUT",
         "endpoint": "program/{{programName2}}",
         "programDescription": "program with All fields",
         "programStatus": null,
         "statusCode": 404,
         "statusText": "Not Found"
       },
        {
          "scenario": "update program with programName with authorization",
          "authType": "Bearer Token",
          "method": "PUT",
          "endpoint": "program/{{programName2}}",
          "programDescription": "program with All fields",
          "programName": "SalesForceCloud",
          "programStatus": "Active",
          "statusCode": 200,
          "statusText": "Ok"
        }
      ]
    },
     {
      "name": "Delete Program By ProgramID",
      "data": [
         {
            "method":"DELETE",
            "authType": "No Auth",
            "Endpoint": "deletebyprogid/{{programId1}}",
            "statusCode": 401,
            "statusText": "Unauthorized"
        },
         {
            "method":"DELETE",
            "authType": "Invalid Bearer token",
            "Endpoint": "deletebyprogid/{{programId1}}",
            "statusCode": 401,
            "statusText": "Unauthorized"
         },
         {
            "method":"GET",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogid/{{programId1}}",
            "statusCode": 405,
            "statusText": "Method Not Allowed"
         },
         {
            "method":"DELETE",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogid/{{invalidProgramId}}",
            "statusCode": 404,
            "statusText": "Not Found"
         },
         {
            "method":"DELETE",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogid/{{programId1}}",
            "statusCode": 200,
            "statusText": "OK"
         }
      ]
   },
   {
      "name": "Delete Program By ProgramName",
      "data": [
         {
            "method":"DELETE",
            "authType": "No Auth",
            "Endpoint": "deletebyprogname/{{programName2}}",
            "statusCode": 401,
            "statusText": "Unauthorized"
        },
         {
            "method":"DELETE",
            "authType": "Invalid Bearer token",
            "Endpoint": "deletebyprogname/{{programName2}}",
            "statusCode": 401,
            "statusText": "Unauthorized"
         },
         {
            "method":"GET",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogname/{{programName2}}",
            "statusCode": 405,
            "statusText": "Method Not Allowed"
         },
         {
            "method":"DELETE",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogname/{{invalidProgramName}}",
            "statusCode": 404,
            "statusText": "Not Found"
         },
         {
            "method":"DELETE",
            "authType": "Bearer Token",
            "Endpoint": "deletebyprogname/{{programName2}}",
            "statusCode": 200,
            "statusText": "OK"
         }
      ]
   },
         
         {
            "name": "Create New Batch",
            "data": [
              {
                "scenario": "Create a batch with an inactive program",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchName": "Team4ApiExplorers",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",      
                "programId": 16225,
                "programName": "Java SpringBoot",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "Create a batch with an already existing program name",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchName": "Team4ApiExplorers",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "programId": "{{programId2}}",
                "programName": "{{programName1}}",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "Create a batch with an invalid program ID",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchName": "Team4ApiExplorers",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "programId": "AAA",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "Create a batch with 'No of Classes' field blank",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchName": "Team4ApiExplorers",
                "batchNoOfClasses": null,
                "batchStatus": "Active",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "Create a batch with numeric batch name",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchName": 12345,
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "Create a batch with same program name and different program ID",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchName": "Team4ApiExplorers1",
                "batchDescription": "created by Team4  postman ApiExplorers",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "programId": "{{programId2}}",
                "statusCode": 201,
                "statusText": "Created"
              },
              
              
              {
                "scenario": "Create a batch with authorization and valid data",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                
                "batchDescription": "created by team4 ApiExplorers postman ",
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "statusCode": 201,
                "statusText": "Created"
              }
            ]
          },
          {
            "name": "Create New Batch2",
            "data": [
              {
                "scenario": "Create a batch with empty batch description",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "batches",
                "batchDescription": null,
                "batchNoOfClasses": 10,
                "batchStatus": "Active",
                "statusCode": 201,
                "statusText": "Created"
              }
            ]
          },
          {
            "name": "Retrive All Batches",
            "data": [
              {
                "scenario": "Retrieve all batches without authorization",
                "authType": "No auth",
                "method": "GET",
                "url": "valid",
                "endpoint": "batches",
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "Retrieve all batches with authorization and invalid endpoint",
                "authType": "Bearer Token",
                "method": "GET",
                "url": "valid",
                "endpoint": "batche",
                "statusCode": 404,
                "statusText": "Not Found"
              },
              {
                "scenario": "Retrieve all batches with authorization",
                "authType": "Bearer Token",
                "method": "GET",
                "url": "valid",
                "endpoint": "batches",
                "statusCode": 200,
                "statusText": "OK"
              }
            ]
          },
          {
            "name": "Retrive Batch by BatchId",
            "data": [
              {
                "scenario": "Retrieve batch by batch ID without authorization",
                "authType": "No auth",
                "method": "GET",
                "endpoint": "batches/batchId/{{batchId2}}",
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "Retrieve batch by batch ID with invalid Endpoint",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/batchId/a",
                "statusCode": 404,
                "statusText": "Not Found"
              },
              {
                "scenario": "Retrieve batch by batch ID with authorization",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/batchId/{{batchId2}}",
                "statusCode": 200,
                "statusText": "OK"
              }
            
            ]
          },
    
          {
            "name": "Retrive Batch by Batchname",
            "data": [
              {
                "scenario": "Retrieve batch by batchName without authorization",
                "authType": "No auth",
                "method": "GET",
                "endpoint": "batches/batchName/{{batchName2}}",
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "Retrieve batch by batchName with authorization",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/batchName/{{batchName2}}",
                "statusCode": 200,
                "statusText": "OK"
              },
              {
                "scenario": "Retrieve batch by batchName with invalid Endpoint",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/batchName/s",
                "statusCode": 404,
                "statusText": "Not Found"
              }
            
            ]
          },
    
          {
            "name": "Retrive Batch by ProgramId",
            "data": [
              {
                "scenario": "Retrieve all batches without authorization",
                "authType": "No Auth",
                "method": "GET",
                "endpoint": "batches/program/{{programId1}}",
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "Retrieve all batches with authorization",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/program/{{programId1}}",
                "statusCode": 200,
                "statusText": "OK"
              },
             
              {
                "scenario": "Retrieve all batches with invalid endpoint",
                "authType": "Bearer Token",
                "method": "GET",
                "endpoint": "batches/program/s",
                "statusCode": 404,
                "statusText": "Not Found"
              }
            ]
          },
          {
            "name": "Update Batch by batchId",
            "data": [
              {
                "scenario": "update batch without authorization",
                "authType": "No Auth",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": "created by team4 ApiExplorers",
                "batchStatus": "Active",
                "batchNoOfClasses": 45,
            
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "update batch with inactive program",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": "created by team4 ApiExplorers",
                "batchStatus": "Active",
                "batchNoOfClasses": 45,
                "programId": 16225,
                "programName": "Java SpringBoot",
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "update batch without program name ",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": "updated by team4 ApiExplorers",
                "batchStatus": "Active",
                "batchNoOfClasses": 45,
               
                "programName": null,
                "statusCode":200,
                "statusText": "Ok"
              },
              {
                "scenario": "update batch with invalidEndpoint",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/1",
                "batchDescription": "updated by team4 ApiExplorers",
                "batchStatus": "Active",
                "batchNoOfClasses": 45,
                "statusCode": 404,
                "statusText": "Not Found"
              },
              {
                "scenario": "update batch without batchstatus",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": "updated by team4 ApiExplorers",
                "batchStatus": null,
                "batchNoOfClasses": 45,
                "statusCode": 400,
                "statusText": "Bad Request"
              },
              {
                "scenario": "update batch with description field empty",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": null,
                "batchStatus": "Active",
                "batchNoOfClasses": 45,
                "statusCode": 200,
                "statusText": "Ok"
              },
              {
                "scenario": "update batch with authorization",
                "authType": "Bearer Token",
                "method": "PUT",
                "endpoint": "batches/{{batchId2}}",
                "batchDescription": "updated by team4 ApiExplorers",
                "batchStatus": "Active",
                "batchNoOfClasses": 50,
                "statusCode": 200,
                "statusText": "Ok"
              }
            ]
          },
          {
            "name": "Delete Batch by BatchId",
            "data": [
              {
                "scenario": "Delete batch by valid batchid",
                "authType": "Bearer Token",
                "method": "DELETE",
                "endpoint": "batches/{{batchId2}}",
                "statusCode": 200,
                "statusText": "ok"
              },
              {
                "scenario": "Delete batch without authorization",
                "authType": "No Auth",
                "method": "DELETE",
                "endpoint": "batches/{{batchId2}}",
                "statusCode": 401,
                "statusText": "Unauthorized"
              },
              {
                "scenario": "Delete batch by invalid batchid",
                "authType": "Bearer Token",
                "method": "DELETE",
                "endpoint": "batches/1",
                "statusCode": 404,
                "statusText": "Not Found"
              },
              {
                "scenario": "Delete batch by invalid Endpoint",
                "authType": "Bearer Token",
                "method": "DELETE",
                "endpoint": "batches/s",
                "statusCode": 404,
                "statusText": "Not Found"
              }
            ]
            },


            {
        "name": "Creating User with Role- R01",
        "data": [
            {
                "scenario": "Creating User with Role- R01",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "users/roleStatus",
                "userComments": "Admin user for LMS",
                "userEduPg": "MBA",
                "userEduUg": "B.Tech",
                "userFirstName": "Astra",
                "userLastName": "Johnson",
                "userLinkedinUrl": "https://www.linkedin.com",
                "userLocation": "New York",
                "userMiddleName": "A",
                "userPhoneNumber": "+1 2134567864",
                "userRoleMaps": [
                    {
                        "roleId": "R01",
                        "userRoleStatus": "Active"
                    }
                ],
                "userTimeZone": "EST",
                "userVisaStatus": "US-Citizen",
                "userLogin": {
                    "loginStatus": "Active",
                    "userLoginEmail": "alia1uerd@gmail.com"
                },
                "statusCode": 200,
                "statusText": "OK"
            }
        ]
    },
    {
        "name": "Creating User with Role- R02",
        "data": [
            {
                "scenario": "Creating User with Role- R02",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "users/roleStatus",
                "userComments": "LMS Staff user",
                "userEduPg": "MCA",
                "userEduUg": "B.Sc",
                "userFirstName": "Boby",
                "userLastName": "Williams",
                "userLinkedinUrl": "https://www.linkedin.com/in/bobywilliams",
                "userLocation": "California",
                "userMiddleName": "B",
                "userPhoneNumber": "+1 2013456789",
                "userRoleMaps": [
                    {
                        "roleId": "R02",
                        "userRoleStatus": "Active"
                    }
                ],
                "userTimeZone": "PST",
                "userVisaStatus": "H1B",
                "userLogin": {
                    "loginStatus": "Active",
                    "userLoginEmail": "boby.staff@gmail.com"
                },
                "statusCode": 200,
                "statusText": "OK"
            }
        ]
    },
    {
        "name": "Creating User with Role- R03",
        "data": [
            {
                "scenario": "Creating User with Role- R03",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "users/roleStatus",
                "userComments": "LMS Student user",
                "userEduPg": "Not-Specified",
                "userEduUg": "B.E",
                "userFirstName": "Naman",
                "userLastName": "Baski",
                "userLinkedinUrl": "https://www.linkedin.com/in/namanb",
                "userLocation": "Texas",
                "userMiddleName": "A",
                "userPhoneNumber": "+1 2876543230",
                "userRoleMaps": [
                    {
                        "roleId": "R03",
                        "userRoleStatus": "Active"
                    }
                ],
                "userTimeZone": "CST",
                "userVisaStatus": "Indian-Citizen",
                "userLogin": {
                    "loginStatus": "Active",
                    "userLoginEmail": "naman.student@gmail.com"
                },
                "statusCode": 200,
                "statusText": "OK"
            }
        ]
    },



{
             "name": "Create new Class",
             "data": [
              
		{
               "scenario": "Create a class with no auth ",
                "authType": "No Auth",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 401,
                "statusText": "Unauthorized"
		},

		{
		"scenario": "Create a class with invalid method ",
                "authType": "Bearer Token",
                "method": "GET",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 405,
                "statusText": "Method Not Allowed"

		},
                {

		"scenario": "Create a class with invalid endpoint ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSch",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 401,
                "statusText": "Unauthorized"

		},
               {

		"scenario": "creating new class with existing class Topic ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},
		
                {

		"scenario": "creating new class with invalid batch id ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "9514qw",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},
                {

		"scenario": "creating new class without batch id ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},

		 {

		"scenario": "creating new class invalid class No ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": "a",
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},

  		 {

		"scenario": "creating new class invalid class No ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": "",
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},

		{

		"scenario": "creating new class invalid as numeric-special staffid ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "45@",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{

		"scenario": "creating new class invalid as alpha-special staffid ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U@#",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{

		"scenario": "creating new class without staffid as invalid ",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": " ",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"
		},
		{

		"scenario": "creating new class invalid with space in staffid",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U 25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},
		
		{

		"scenario": "creating new class with hyphen as invalid staffid",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U-25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{

		"scenario": "creating new class with invalid dateformat sheduledclassdate",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U-25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{

		"scenario": "creating new class with invalid sheduled dates",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U-25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "03-20T19:04:41.220Z",
				"03-20T20:04:41.220Z"

                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},
		{

		"scenario": "creating new class with non mandatory fields as empty",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id":  "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "seleniumsyntax",
                "class_status": "Active",
                "class_staffId": "U-25",
                "class_description": "",
                "class_comments": "",
                "class_notes": "",
                "class_recordingPath": "",
                "class_scheduledDates": [
                                "03-20T19:04:41.220Z",
				"03-20T20:04:41.220Z"

                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},



		{

                "scenario": "Create a class with authorization and valid data",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythoniterator",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "WebAutomation",
                "class_comments": "sortdone",
                "class_notes": "available",
                "class_recordingPath": "string",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 201,
                "statusText": "Created"

                    }
		]
		},

	{
            "name": "Create class with only mandatory fields",
            "data": [

		{
               
             	"scenario": "Create a class with mandatory fields",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "endpoint": "CreateClassSchedule",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonScope",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 201,
                "statusText": "Created"

                }
  	       ]
	     },
		
{
            "name": "Get all Class List",
            "data": [
               {
                  "method":"GET",
                   "authType": "Bearertoken",
                  "Endpoint": "allClasses",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              

                {
                  "method":"POST",
                  "authType": "Bearer Token",
                  "Endpoint": "allClasses",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }


           
            ]
      },
{
          "name": "Get all Upcoming Classes for particular Student",
            "data": [


               {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "upcomingClasses/{{student_Id}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "upcomingClasses/{{student_Id}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "upcomingClassessSSSSSS/{{student_Id}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "upcomingClasses/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "upcomingClasses/{{student_Id}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
       "name": "Get class recordings by BatchId",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "batchRecordings/{{batchId2}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "batchRecordings/{{batchId2}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "batchRecordingsSSSSSS/{{batchId2}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
            {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "batchRecordings/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "batchRecordings/{{batchId2}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{


    "name": "Get Class details by Id",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "class/{{class_Id}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "class/{{class_Id}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classSSS/{{class_Id}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "class/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "class/{{class_Id}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
     
    "name": "Get all Classes by Class topic",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classes/{{class_Topic}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "classes/{{class_Topic}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesSSSS/{{class_Topic}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classes/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "classes/{{class_Topic}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
    "name": "Get all Classes by BatchId",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesbyBatch/{{batchId2}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "classesbyBatch/{{batchId2}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesSSSSbyBatch/{{batchId2}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesbyBatch/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "classesbyBatch/{{batchId2}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
   "name": "Get all Classes by StaffId",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesByStaff/{{staff_Id}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "classesByStaff/{{staff_Id}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesSSSByStaff/{{staff_Id}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classesByStaff/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "classesByStaff/{{staff_Id}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
     "name": "Get all recordings",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classrecordings",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "classrecordings",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classrecordingsSSS",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
        
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "classrecordings",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },
{
    "name": "Get Class Recordings by Class Id",
            "data": [
       {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classRecordings/{{class_Id}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"GET",
                  "authType": "No Auth",
                  "Endpoint": "classRecordings/{{class_Id}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classRecordingsSSS/{{class_Id}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
           {
                  "method":"GET",
                  "authType": "Bearer Token",
                  "Endpoint": "classRecordings/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "classRecordings/{{class_Id}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
     },

	
 	     {
             "name": "Update New Class",
             "data": [
              
		{
               "scenario": "Update a class with no auth ",
                "authType": "No Auth",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 401,
                "statusText": "Unauthorized"

		},

		{
               "scenario": "Update a class with invalid endpoint ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateCl",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},
		{
               "scenario": "Update a class with invalid method",
                "authType": "Bearer Token",
                "method": "POST",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 405,
                "statusText": "Method Not Allowed"

		},

		{
               "scenario": "Update a class with invalid classID ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/888",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		 
		{
               "scenario": "Update a class without class no as invalid ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": "",
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},

		{
               "scenario": "Update a class with classno and not matching shelduleddates ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 2,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},

		{
               "scenario": "Update class staffId with space ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U 25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{
               "scenario": "Update class staffId with only numeric value ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},
		{
               "scenario": "Update class staffId with special charachters ",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "#$@",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{
               "scenario": "Update class staffId with only alpha values",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "#$@",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

		{
               "scenario": "Update class staffId with hyphen",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U-25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 404,
                "statusText": "Not Found"

		},

             {
               "scenario": "Update class sheduledclassdate with invalid future date",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-03-20T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},
		 {
               "scenario": "Update class sheduledclassdate with invalid dateformat",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates": [
                                "2025-30-8T19:04:41.220Z"
                        ],
                "statusCode": 400,
                "statusText": "Bad Request"

		},
		 {
               "scenario": "Update class missing sheduled class date/s",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "null",
                "class_comments": "null",
                "class_notes": "null",
                "class_recordingPath": "null",
                "class_scheduledDates":"",
                "statusCode": 400,
                "statusText": "Bad Request"

		},
		 {
               "scenario": "Update class with valid Details",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": "automation",
                "class_comments": "pythonsortcompleted",
                "class_notes": "updated",
                "class_recordingPath": "//recording",
                "class_scheduledDates":[
                                "2025-03-20T19:04:41.220Z"
                        ],

                "statusCode": 200,
                "statusText": "OK"

		},
              {
               "scenario": "Update class with mandatory fields alone",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "updateNewClassEP": "updateClass/{{class_Id}}",
                "batch_Id": "{{batchId2}}",
                "class_Num": 1,
                "class_date": "2025-03-18T19:04:41.220Z",
               "class_topic": "pythonsort",
                "class_status": "Active",
                "class_staffId": "U25",
                "class_description": " ",
                "class_comments": " ",
                "class_notes": " ",
                "class_recordingPath": " ",
                "class_scheduledDates":[
                                "2025-03-20T19:04:41.220Z"
                        ],

                "statusCode": 200,
                "statusText": "OK"

		}
	     ]
	},

	{
             "name": "Update Class Recording Path",
             "data": [
		
                 {
               "scenario": "Update Class Recording Path with no auth",
                "authType": "no auth",
                "method": "PUT",
                "url": "valid",
                "UpdateClassByRecEP": "updateClassrecording/{{class_Id}}",
                "class_recordingPath": "//recording.mp4",
	            "cs_Id": 0,
                "statusCode": 200,
                "statusText": "OK"

		},
		 {
               "scenario": "Update Class Recording Path with invalid endPoint",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "UpdateClassByRecEP": "updateClass",
                "class_recordingPath": "//recording.mp4",
	            "cs_Id": 0,
                "statusCode": 200,
                "statusText": "OK"

		},
		{
               "scenario": "Update Class Recording Path with invalid method",
                "authType": "Bearer Token",
                "method": "post",
                "url": "valid",
                "UpdateClassByRecEP": "updateClass",
                "class_recordingPath": "//recording.mp4",
	            "cs_Id": 0,
                "statusCode": 200,
                "statusText": "OK"

		},
		{
               "scenario": "Update Class Recording Path valid",
                "authType": "Bearer Token",
                "method": "PUT",
                "url": "valid",
                "UpdateClassByRecEP": "updateClassrecording/{{class_Id}}",
                "class_recordingPath": "//recording.mp4",
	            "cs_Id": 0,
                "statusCode": 200,
                "statusText": "OK"

		}
]
},
{
     "name": "Delete class by Class Id",
            "data": [
       {
                  "method":"DELETE",
                  "authType": "Bearer Token",
                  "Endpoint": "deleteByClass/{{class_Id}}",
                  "statusCode": 200,
                  "statusText": "OK"
               },
              {
                  "method":"DELETE",
                  "authType": "No Auth",
                  "Endpoint": "deleteByClass/{{class_Id}}",
                  "statusCode": 401,
                  "statusText": "Unauthorized"
               },
             {
                  "method":"DELETE",
                  "authType": "Bearer Token",
                  "Endpoint": "deleteByClassSSS/{{class_Id}}",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
            {
                  "method":"DELETE",
                  "authType": "Bearer Token",
                  "Endpoint": "deleteByClass/zzz",
                  "statusCode": 404,
                  "statusText": "Not Found"
               },
              {
                  "method":"PUT",
                  "authType": "Bearer Token",
                  "Endpoint": "deleteByClass/{{class_Id}}",
                  "statusCode": 405,
                  "statusText": "Method Not Allowed"
               }
          ]
      },
      {
         "name": "Delete User By UserId",
         "data": [
           {
             "scenario": "Delete User without authorization",
             "authType": "Bearer Token",
             "method": "DELETE",
             "endpoint": "users/U211",
             "statusCode": 401,
             "statusText": "Unauthorized"
           },
           {
             "scenario": "Delete User without authorization",
             "authType": "No Auth",
             "method": "DELETE",
             "endpoint": "users/U211",
             "statusCode": 401,
             "statusText": "Unauthorized"
           },
           {
             "scenario": "Delete User by invalid batchid",
             "authType": "Bearer Token",
             "method": "DELETE",
             "endpoint": "users/",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Delete User by invalid Endpoint",
             "authType": "Bearer Token",
             "method": "DELETE",
             "endpoint": "users/{{nuserId}}",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get All Users",
         "data": [
           {
             "scenario": "Retrieve all Users with authorization",
 
             "endpoint": "users",
             "statusCode": 200,
             "statusText": "OK"
           },
           {
             "scenario": "Retrieve all batches with authorization and invalid endpoint",
 
             "endpoint": "usersss",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },

       {
         "name": "Get Active Users",
         "data": [
           {
             "scenario": "Retrieve All Active Users with authorization",
 
             "method": "GET",
             "endpoint": "users/activeUsers",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve All Active Users with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/activeUserssss",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve All Active Users with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/activeUsers**##",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get User Email",
         "data": [
           {
             "scenario": "Retrieve All User Emails with authorization",
 
             "method": "GET",
             "endpoint": "fetch-emails",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve All User Emails with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "fetch-ememails",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve All User Emails with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "fetch-emails**##",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get All Roles",
         "data": [
           {
             "scenario": "Retrieve All Roles with authorization",
 
             "method": "GET",
             "endpoint": "roles",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve All Roles with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "rolesssss",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve All Roles with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "roles**##",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get All Users With Roles",
         "data": [
           {
             "scenario": "Retrieve All Users With Roles with authorization",
 
             "method": "GET",
             "endpoint": "users/roles",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve All Users With Roles with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/roleeles",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve All Users With Roles with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/roles**##",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get Count of Active And Inactive Users",
         "data": [
           {
             "scenario": "Retrieve Count of Active And Inactive Users with authorization",
 
             "method": "GET",
             "endpoint": "users/byStatus",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve Count of Active And Inactive Users with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/BYStatus",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Count of Active And Inactive Users with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/byStatus**##",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get User By Program Batches",
         "data": [
           {
             "scenario": "Retrieve Users By Program Batches with authorization",
 
             "method": "GET",
             "endpoint": "users/programBatch/9586",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve Users By Program Batches with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/PROrogramBatch/9586",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users By Program Batches with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/programBatch/9586",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users By Program Batches with invalid pgm id",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/programBatch/95*6",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Retrieve User For Program",
         "data": [
           {
             "scenario": "Retrieve Users For Program with authorization",
 
             "method": "GET",
             "endpoint": "users/programs/16208",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve Users For Program with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/proGRams/16208",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users For Program with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/prog&&ams/16208",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users For Program with invalid pgm id",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/programBatch/1620$$8",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Get Users By RoleId",
         "data": [
           {
             "scenario": "Retrieve Users By RoleId with authorization",
 
             "method": "GET",
             "endpoint": "users/roles/R03",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve Users By RoleId with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/rolesSS/R03",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users By RoleId with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/role$$s/R03",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users By RoleId with invalid role id",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "users/roles/R05",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       },
       {
         "name": "Gets Users By RoleId V2",
         "data": [
           {
             "scenario": "Retrieve Users By RoleId V2 with authorization",
 
             "method": "GET",
             "endpoint": "v2/users",
             "statusCode": 200,
             "statusText": "OK"
           },
 
           {
             "scenario": "Retrieve Users By RoleId V2 with invalid Endpoint",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "V2/Usersss",
             "statusCode": 404,
             "statusText": "Not Found"
           },
           {
             "scenario": "Retrieve Users By RoleId V2 with special characters",
             "authType": "Bearer Token",
             "method": "GET",
             "endpoint": "v2/user##$s",
             "statusCode": 404,
             "statusText": "Not Found"
           }
         ]
       }
      ]
   }
]